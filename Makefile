.PHONY: help install run test clean format lint typecheck coverage quality db-up db-down db-migrate db-reset

help:
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  make install    - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ uv"
	@echo "  make run        - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
	@echo "  make test       - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"
	@echo "  make format     - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ (ruff)"
	@echo "  make lint       - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–∏–Ω—Ç–µ—Ä–æ–º (ruff)"
	@echo "  make typecheck  - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∏–ø—ã (mypy)"
	@echo "  make coverage   - –¢–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º"
	@echo "  make quality    - –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞"
	@echo "  make clean      - –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
	@echo ""
	@echo "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î:"
	@echo "  make db-up      - –ó–∞–ø—É—Å—Ç–∏—Ç—å PostgreSQL —á–µ—Ä–µ–∑ Docker"
	@echo "  make db-down    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PostgreSQL"
	@echo "  make db-migrate - –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏"
	@echo "  make db-reset   - –°–±—Ä–æ—Å–∏—Ç—å –ë–î –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞–Ω–æ–≤–æ"

install:
	@echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	uv venv
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	uv sync
	@echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
	@if not exist .env (copy .env.example .env) else (echo .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
	@echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–æ–∫–µ–Ω—ã –≤ .env –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: make run"

run:
	uv run bot.py

test:
	uv run pytest tests/ -v

format:
	@echo "üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	uv run ruff format .
	@echo "‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"

lint:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–µ—Ä–æ–º..."
	uv run ruff check .
	@echo "‚úÖ –õ–∏–Ω—Ç–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω"

typecheck:
	@echo "üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤..."
	uv run mypy bot.py handlers/ services/ roles/ config.py
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

coverage:
	@echo "üìä –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º..."
	uv run pytest tests/ -v --cov=. --cov-report=term-missing --cov-report=html
	@echo "‚úÖ Coverage report: htmlcov/index.html"

quality: format lint typecheck test
	@echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–π–¥–µ–Ω—ã!"

clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
	@for /d /r . %%d in (__pycache__) do @if exist "%%d" rd /s /q "%%d"
	@if exist bot.log del /f /q bot.log
	@if exist .coverage del /f /q .coverage
	@if exist htmlcov rd /s /q htmlcov
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# Database commands
db-up:
	@echo "üêò –ó–∞–ø—É—Å–∫ PostgreSQL..."
	docker-compose up -d
	@echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î..."
	timeout /t 5
	@echo "‚úÖ PostgreSQL –∑–∞–ø—É—â–µ–Ω"

db-down:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL..."
	docker-compose down
	@echo "‚úÖ PostgreSQL –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

db-migrate:
	@echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
	uv run alembic upgrade head
	@echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"

db-reset:
	@echo "‚ö†Ô∏è  –°–±—Ä–æ—Å –ë–î –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –∑–∞–Ω–æ–≤–æ..."
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
	docker-compose down -v
	@echo "üêò –ó–∞–ø—É—Å–∫ PostgreSQL..."
	docker-compose up -d
	@echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î..."
	timeout /t 5
	@echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
	uv run alembic upgrade head
	@echo "‚úÖ –ë–î —Å–±—Ä–æ—à–µ–Ω–∞ –∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"


